# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-11-10 01:41
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='person',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=80, null=True)),
                ('last_name', models.CharField(blank=True, max_length=80, null=True)),
                ('username', models.CharField(max_length=80, primary_key=True, serialize=False)),
                ('anonymous', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_dealer', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to='users/')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logo/')),
                ('phone', models.CharField(default='0', max_length=80)),
                ('cell_phone', models.CharField(blank=True, max_length=80, null=True)),
                ('address', models.CharField(blank=True, max_length=160, null=True)),
                ('description', models.CharField(blank=True, max_length=140, null=True)),
                ('facebook', models.CharField(default='#', max_length=140)),
                ('instagram', models.CharField(default='#', max_length=140)),
                ('twitter', models.CharField(default='#', max_length=140)),
                ('pinterest', models.CharField(default='#', max_length=140)),
                ('google', models.CharField(default='#', max_length=140)),
                ('youtube', models.CharField(default='#', max_length=140)),
                ('iframe', models.CharField(max_length=1040, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='blog_entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('image', models.ImageField(blank=True, null=True, upload_to='blog/')),
                ('content', models.TextField()),
                ('published', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='body_style',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=80, unique=True)),
                ('image', models.ImageField(upload_to='photos/')),
                ('index', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='car',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('vin', models.CharField(blank=True, max_length=17, null=True)),
                ('trim', models.CharField(max_length=80)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('transmission_des', models.CharField(blank=True, max_length=100)),
                ('engine_des', models.CharField(blank=True, max_length=100)),
                ('city_MPG', models.CharField(blank=True, max_length=100)),
                ('highway_MPG', models.CharField(blank=True, max_length=100)),
                ('published', models.BooleanField(default=True)),
                ('sold', models.BooleanField(default=False)),
                ('condition', models.CharField(choices=[('New', 'new'), ('Used', 'used'), ('certified', 'certified')], max_length=100)),
                ('mileage', models.FloatField(blank=True, null=True)),
                ('price', models.IntegerField(validators=[django.core.validators.MaxValueValidator(1000000)])),
                ('off_price', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(500000)])),
                ('stock_number', models.IntegerField(blank=True, default=1, null=True, validators=[django.core.validators.MaxValueValidator(1000)])),
                ('doors', models.IntegerField(blank=True, choices=[(2, 'two'), (3, 'three'), (4, 'four'), (5, 'five')], null=True)),
                ('exterior_color', models.CharField(blank=True, choices=[('Black', 'Black'), ('Blue', 'Blue'), ('Brown', 'Brown'), ('Gold', 'Gold'), ('Gray', 'Gray'), ('Green', 'Green'), ('Off White', 'Off White'), ('Red', 'Red'), ('Silver', 'Silver'), ('White', 'White'), ('Purple', 'Purple'), ('Orange', 'Orange')], max_length=20)),
                ('interior_color', models.CharField(blank=True, choices=[('Black', 'Black'), ('Blue', 'Blue'), ('Brown', 'Brown'), ('Gold', 'Gold'), ('Gray', 'Gray'), ('Green', 'Green'), ('Off White', 'Off White'), ('Red', 'Red'), ('Silver', 'Silver'), ('White', 'White'), ('Purple', 'Purple'), ('Orange', 'Orange')], max_length=20)),
                ('exterior_color_des', models.CharField(blank=True, max_length=100)),
                ('interior_color_des', models.CharField(blank=True, max_length=100)),
                ('interior_fabric', models.CharField(blank=True, choices=[('Cloth', 'cloth'), ('Leather', 'leather'), ('Not Applicable', 'not applicable'), ('Other', 'other')], max_length=100)),
                ('comfort', models.CharField(blank=True, max_length=2000)),
                ('entertainment', models.CharField(blank=True, max_length=2000)),
                ('luxury', models.CharField(blank=True, max_length=2000)),
                ('miscellaneous', models.CharField(blank=True, max_length=2000)),
                ('body_s', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apps.body_style')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='drive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=80, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='drive_train',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=80, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='engine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=80, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='favourite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.car')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='fuel_type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=80, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='make',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=80, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='mImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='photos/cars')),
                ('rcar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.car')),
            ],
        ),
        migrations.CreateModel(
            name='model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=80)),
                ('maker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.make')),
            ],
        ),
        migrations.CreateModel(
            name='slide',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='slide/')),
                ('title_1', models.CharField(max_length=80)),
                ('title_2', models.CharField(max_length=80)),
                ('title_3', models.CharField(max_length=80)),
                ('url_1', models.CharField(default='#', max_length=80)),
                ('url_2', models.CharField(default='#', max_length=80)),
                ('url_3', models.CharField(default='#', max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name='theme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15, unique=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='themes/')),
                ('number_of_cars', models.IntegerField(default=5)),
            ],
        ),
        migrations.CreateModel(
            name='transmission_type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=80, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='trim',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=80)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.model')),
            ],
        ),
        migrations.CreateModel(
            name='trim_year',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('trim', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.trim')),
            ],
        ),
        migrations.AddField(
            model_name='car',
            name='drive',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apps.drive'),
        ),
        migrations.AddField(
            model_name='car',
            name='drive_t',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.drive_train'),
        ),
        migrations.AddField(
            model_name='car',
            name='engine_t',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.engine'),
        ),
        migrations.AddField(
            model_name='car',
            name='fuel_t',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.fuel_type'),
        ),
        migrations.AddField(
            model_name='car',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.model'),
        ),
        migrations.AddField(
            model_name='car',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='car',
            name='transmission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.transmission_type'),
        ),
        migrations.AddField(
            model_name='blog_entry',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.Category'),
        ),
        migrations.AddField(
            model_name='person',
            name='utheme',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apps.theme'),
        ),
    ]
